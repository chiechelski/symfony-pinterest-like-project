<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app</parameter>
    <parameter key="kernel.environment">prod</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod</parameter>
    <parameter key="kernel.logs_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="PinanoBootstrap3Bundle">Pinano\Bootstrap3Bundle\PinanoBootstrap3Bundle</parameter>
      <parameter key="HWIOAuthBundle">HWI\Bundle\OAuthBundle\HWIOAuthBundle</parameter>
      <parameter key="OneupUploaderBundle">Oneup\UploaderBundle\OneupUploaderBundle</parameter>
      <parameter key="PinterestLikeCoreBundle">PinterestLike\CoreBundle\PinterestLikeCoreBundle</parameter>
      <parameter key="PinterestLikeStaticBundle">PinterestLike\StaticBundle\PinterestLikeStaticBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="HappyRGoogleApiBundle">HappyR\Google\ApiBundle\HappyRGoogleApiBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appProdDebugProjectContainer</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">PinterestLike</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="secret">fc3db19055fd0d7430fddf5c4818d443ea4f2518</parameter>
    <parameter key="my_user_provider.class">PinterestLike\UserBundle\Security\Core\User\FOSUBUserProvider</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\Fragment\FragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="kernel.secret">fc3db19055fd0d7430fddf5c4818d443ea4f2518</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\PhpEngine</parameter>
    <parameter key="templating.helper.slots.class">Symfony\Component\Templating\Helper\SlotsHelper</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Component\Templating\Helper\CoreAssetsHelper</parameter>
    <parameter key="templating.helper.actions.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.request.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper</parameter>
    <parameter key="templating.helper.session.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper</parameter>
    <parameter key="templating.helper.code.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper</parameter>
    <parameter key="templating.helper.translator.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper</parameter>
    <parameter key="templating.helper.form.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper</parameter>
    <parameter key="templating.helper.stopwatch.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper</parameter>
    <parameter key="templating.form.engine.class">Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine</parameter>
    <parameter key="templating.form.renderer.class">Symfony\Component\Form\FormRenderer</parameter>
    <parameter key="templating.globals.class">Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables</parameter>
    <parameter key="templating.asset.path_package.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage</parameter>
    <parameter key="templating.asset.url_package.class">Symfony\Component\Templating\Asset\UrlPackage</parameter>
    <parameter key="templating.asset.package_factory.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.helper.form.resources" type="collection">
      <parameter>FrameworkBundle:Form</parameter>
    </parameter>
    <parameter key="debug.templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="validator.api">3</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appProdUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appProdUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/config/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">appProd</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.container.dump">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/appProdDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="hwi_oauth.resource_ownermap.configured.main" type="collection">
      <parameter key="facebook">/login/check-facebook</parameter>
      <parameter key="google">/login/check-google</parameter>
      <parameter key="yahoo">/login/check-yahoo</parameter>
      <parameter key="my_custom_provider">/login/check-custom</parameter>
    </parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
    </parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.assets.class">Symfony\Bundle\TwigBundle\Extension\AssetsExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.controller.preview_error.class">Symfony\Bundle\TwigBundle\Controller\PreviewErrorController</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>LiipImagineBundle:Form:form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="debug.templating.engine.twig.class">Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine</parameter>
    <parameter key="twig.options" type="collection">
      <parameter key="debug">true</parameter>
      <parameter key="strict_variables">true</parameter>
      <parameter key="exception_controller">twig.controller.exception:showAction</parameter>
      <parameter key="form_themes" type="collection">
        <parameter>form_div_layout.html.twig</parameter>
      </parameter>
      <parameter key="autoescape" type="collection">
        <parameter>Symfony\Bundle\TwigBundle\TwigDefaultEscapingStrategy</parameter>
        <parameter>guess</parameter>
      </parameter>
      <parameter key="cache">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/twig</parameter>
      <parameter key="charset">UTF-8</parameter>
      <parameter key="paths" type="collection"/>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.slack.class">Monolog\Handler\SlackHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.handler.whatfailuregroup.class">Monolog\Handler\WhatFailureGroupHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.handler.elasticsearch.class">Monolog\Handler\ElasticSearchHandler</parameter>
    <parameter key="monolog.elastica.client.class">Elastica\Client</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console">null</parameter>
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>PinterestLikeStaticBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web</parameter>
    <parameter key="assetic.write_to">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\ORM\Mapping\DefaultEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="hwi_oauth.authentication.listener.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener</parameter>
    <parameter key="hwi_oauth.authentication.provider.oauth.class">HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider</parameter>
    <parameter key="hwi_oauth.authentication.entry_point.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint</parameter>
    <parameter key="hwi_oauth.user.provider.class">HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.entity.class">HWI\Bundle\OAuthBundle\Security\Core\User\EntityUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.fosub_bridge.class">HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider</parameter>
    <parameter key="hwi_oauth.registration.form.handler.fosub_bridge.class">HWI\Bundle\OAuthBundle\Form\FOSUBRegistrationFormHandler</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth1.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth1ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth2.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth2ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.amazon.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AmazonResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.auth0.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\Auth0ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitbucket.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitbucketResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitly.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitlyResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.box.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BoxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dailymotion.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DailymotionResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.deviantart.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DeviantartResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.disqus.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DisqusResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dropbox.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DropboxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eve_online.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EveOnlineResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eventbrite.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EventbriteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.facebook.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FacebookResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.flickr.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FlickrResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.foursquare.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FoursquareResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.github.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GitHubResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.google.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GoogleResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.hubic.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\HubicResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.instagram.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\InstagramResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.jira.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\JiraResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.linkedin.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\LinkedinResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.mailru.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\MailRuResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.paypal.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\PaypalResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.qq.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\QQResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.reddit.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\RedditResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.salesforce.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SalesforceResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sensio_connect.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SensioConnectResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sina_weibo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SinaWeiboResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.soundcloud.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SoundcloudResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stack_exchange.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StackExchangeResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stereomood.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StereomoodResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.toshl.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ToshlResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.trello.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TrelloResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitch.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitchResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitter.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitterResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.vkontakte.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\VkontakteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.windows_live.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WindowsLiveResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wordpress.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WordpressResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.xing.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\XingResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yahoo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YahooResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yandex.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YandexResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.odnoklassniki.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\OdnoklassnikiResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.37signals.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ThirtySevenSignalsResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_ownermap.class">HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap</parameter>
    <parameter key="hwi_oauth.security.oauth_utils.class">HWI\Bundle\OAuthBundle\Security\OAuthUtils</parameter>
    <parameter key="hwi_oauth.storage.session.class">HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage</parameter>
    <parameter key="hwi_oauth.templating.helper.oauth.class">HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper</parameter>
    <parameter key="hwi_oauth.twig.extension.oauth.class">HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension</parameter>
    <parameter key="hwi_oauth.http_client.class">Buzz\Client\Curl</parameter>
    <parameter key="hwi_oauth.firewall_name">main</parameter>
    <parameter key="hwi_oauth.target_path_parameter">null</parameter>
    <parameter key="hwi_oauth.use_referer">false</parameter>
    <parameter key="hwi_oauth.resource_owners" type="collection">
      <parameter>facebook</parameter>
      <parameter>google</parameter>
      <parameter>yahoo</parameter>
    </parameter>
    <parameter key="hwi_oauth.connect">true</parameter>
    <parameter key="hwi_oauth.connect.confirmation">true</parameter>
    <parameter key="hwi_oauth.templating.engine">twig</parameter>
    <parameter key="oneup_uploader.chunks.manager.class">Oneup\UploaderBundle\Uploader\Chunk\ChunkManager</parameter>
    <parameter key="oneup_uploader.chunks_storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.chunks_storage.filesystem.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.namer.uniqid.class">Oneup\UploaderBundle\Uploader\Naming\UniqidNamer</parameter>
    <parameter key="oneup_uploader.routing.loader.class">Oneup\UploaderBundle\Routing\RouteLoader</parameter>
    <parameter key="oneup_uploader.storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.storage.filesystem.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.orphanage.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemOrphanageStorage</parameter>
    <parameter key="oneup_uploader.orphanage.manager.class">Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager</parameter>
    <parameter key="oneup_uploader.controller.fineuploader.class">Oneup\UploaderBundle\Controller\FineUploaderController</parameter>
    <parameter key="oneup_uploader.controller.blueimp.class">Oneup\UploaderBundle\Controller\BlueimpController</parameter>
    <parameter key="oneup_uploader.controller.uploadify.class">Oneup\UploaderBundle\Controller\UploadifyController</parameter>
    <parameter key="oneup_uploader.controller.yui3.class">Oneup\UploaderBundle\Controller\YUI3Controller</parameter>
    <parameter key="oneup_uploader.controller.fancyupload.class">Oneup\UploaderBundle\Controller\FancyUploadController</parameter>
    <parameter key="oneup_uploader.controller.mooupload.class">Oneup\UploaderBundle\Controller\MooUploadController</parameter>
    <parameter key="oneup_uploader.controller.plupload.class">Oneup\UploaderBundle\Controller\PluploadController</parameter>
    <parameter key="oneup_uploader.controller.dropzone.class">Oneup\UploaderBundle\Controller\DropzoneController</parameter>
    <parameter key="oneup_uploader.error_handler.noop.class">Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.blueimp.class">Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler</parameter>
    <parameter key="oneup_uploader.chunks" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/chunks</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
        <parameter key="prefix">chunks</parameter>
      </parameter>
      <parameter key="load_distribution">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.orphanage" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/orphanage</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.gallery" type="collection">
      <parameter key="frontend">blueimp</parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="storage" type="collection">
        <parameter key="service">null</parameter>
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="directory">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="route_prefix"></parameter>
      <parameter key="allowed_mimetypes" type="collection"/>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="max_size">9223372036854775807</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_progress">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="namer">oneup_uploader.namer.uniqid</parameter>
    </parameter>
    <parameter key="oneup_uploader.config" type="collection">
      <parameter key="mappings" type="collection">
        <parameter key="gallery" type="collection">
          <parameter key="frontend">blueimp</parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="storage" type="collection">
            <parameter key="service">null</parameter>
            <parameter key="type">filesystem</parameter>
            <parameter key="filesystem">null</parameter>
            <parameter key="directory">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="route_prefix"></parameter>
          <parameter key="allowed_mimetypes" type="collection"/>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="max_size">9223372036854775807</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="namer">oneup_uploader.namer.uniqid</parameter>
        </parameter>
      </parameter>
      <parameter key="chunks" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="storage" type="collection">
          <parameter key="type">filesystem</parameter>
          <parameter key="filesystem">null</parameter>
          <parameter key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/chunks</parameter>
          <parameter key="stream_wrapper">null</parameter>
          <parameter key="sync_buffer_size">100K</parameter>
          <parameter key="prefix">chunks</parameter>
        </parameter>
        <parameter key="load_distribution">true</parameter>
      </parameter>
      <parameter key="orphanage" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/orphanage</parameter>
      </parameter>
      <parameter key="twig">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.controllers" type="collection">
      <parameter key="gallery" type="collection">
        <parameter>oneup_uploader.controller.gallery</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix"></parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="oneup_uploader.maxsize" type="collection">
      <parameter key="gallery">2097152</parameter>
    </parameter>
    <parameter key="doctrine_migrations.dir_name">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">knp_menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="liip_imagine.filter.configuration.class">Liip\ImagineBundle\Imagine\Filter\FilterConfiguration</parameter>
    <parameter key="liip_imagine.filter.manager.class">Liip\ImagineBundle\Imagine\Filter\FilterManager</parameter>
    <parameter key="liip_imagine.data.manager.class">Liip\ImagineBundle\Imagine\Data\DataManager</parameter>
    <parameter key="liip_imagine.cache.manager.class">Liip\ImagineBundle\Imagine\Cache\CacheManager</parameter>
    <parameter key="liip_imagine.cache.signer.class">Liip\ImagineBundle\Imagine\Cache\Signer</parameter>
    <parameter key="liip_imagine.binary.mime_type_guesser.class">Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser</parameter>
    <parameter key="liip_imagine.controller.class">Liip\ImagineBundle\Controller\ImagineController</parameter>
    <parameter key="liip_imagine.twig.extension.class">Liip\ImagineBundle\Templating\ImagineExtension</parameter>
    <parameter key="liip_imagine.templating.helper.class">Liip\ImagineBundle\Templating\Helper\ImagineHelper</parameter>
    <parameter key="liip_imagine.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="liip_imagine.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="liip_imagine.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="liip_imagine.filter.loader.relative_resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.thumbnail.class">Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.crop.class">Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.paste.class">Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.watermark.class">Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.strip.class">Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.background.class">Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.upscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.auto_rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.interlace.class">Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader</parameter>
    <parameter key="liip_imagine.binary.loader.filesystem.class">Liip\ImagineBundle\Binary\Loader\FileSystemLoader</parameter>
    <parameter key="liip_imagine.binary.loader.stream.class">Liip\ImagineBundle\Binary\Loader\StreamLoader</parameter>
    <parameter key="liip_imagine.cache.resolver.web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.no_cache_web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.aws_s3.class">Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver</parameter>
    <parameter key="liip_imagine.cache.resolver.cache.class">Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.proxy.class">Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver</parameter>
    <parameter key="liip_imagine.form.type.image.class">Liip\ImagineBundle\Form\Type\ImageType</parameter>
    <parameter key="liip_imagine.meta_data.reader.class">Imagine\Image\Metadata\ExifMetadataReader</parameter>
    <parameter key="liip_imagine.filter.post_processor.jpegoptim.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor</parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.cache.resolver.default">default</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="cache" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection"/>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="my_thumb" type="collection">
        <parameter key="quality">85</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>120</parameter>
              <parameter>120</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">default</parameter>
    <parameter key="liip_imagine.controller.filter_action">liip_imagine.controller:filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">liip_imagine.controller:filterRuntimeAction</parameter>
    <parameter key="happy_r_google_api" type="collection">
      <parameter key="application_name">PinterestLike</parameter>
      <parameter key="oauth2_client_id">469994775960-qqjm206pnsgkgk4f2o0dmoq4em5npnr1.apps.googleusercontent.com</parameter>
      <parameter key="oauth2_client_secret">tHHUoDt9_qvgq9BPGQDdSpD0</parameter>
      <parameter key="oauth2_redirect_uri">https://dev.PinterestLike.com/login/check-google</parameter>
      <parameter key="developer_key">AIzaSyB2YYnYFdcWYKS2ng4xeis_Pb52J0B1FvU</parameter>
      <parameter key="site_name">PinterestLike.com</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="user_block">SonataAdminBundle:Core:user_block.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="layout">SonataAdminBundle::standard_layout.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="fos_user.validator.password.class">FOS\UserBundle\Validator\PasswordValidator</parameter>
    <parameter key="fos_user.validator.unique.class">FOS\UserBundle\Validator\UniqueValidator</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\Security\InteractiveLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">FOSUserBundle:Resetting:email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">PinterestLike\UserBundle\Entity\User</parameter>
    <parameter key="fos_user.template.engine">twig</parameter>
    <parameter key="fos_user.profile.form.type">fos_user_profile</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">PinterestLike_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">fos_user_resetting</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="pinterestlike_user.registration.form.type" class="PinterestLike\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="PinterestLike_user_registration"/>
    </service>
    <service id="my_user_provider" class="PinterestLike\UserBundle\Security\Core\User\FOSUBUserProvider">
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="collection">
        <argument key="facebook">facebook_id</argument>
        <argument key="google">google_id</argument>
        <argument key="yahoo">yahoo_id</argument>
      </argument>
    </service>
    <service id="pinterestlike_user_upload_listener" class="PinterestLike\UserBundle\EventListener\UploadListener">
      <tag name="kernel.event_listener" event="oneup_uploader.post_persist" method="onUpload"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="pinterestlike.twig.side_data_helper" class="PinterestLike\CoreBundle\Twig\SiteDataHelperExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="hwi_oauth.user.provider.entity" class="HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider"/>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>fc3db19055fd0d7430fddf5c4818d443ea4f2518</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\Fragment\FragmentHandler">
      <argument type="collection"/>
      <argument>true</argument>
      <argument type="service" id="request_stack"/>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.inline"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.hinclude"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.esi"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.ssi"/>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/translations</argument>
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="translator" class="Symfony\Component\Translation\IdentityTranslator">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="gc_probability">1</argument>
      </argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/secure_random.seed</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="PinterestLike_user_registration">pinterestlike_user.registration.form.type</argument>
              <argument key="form">form.type.form</argument>
              <argument key="birthday">form.type.birthday</argument>
              <argument key="checkbox">form.type.checkbox</argument>
              <argument key="choice">form.type.choice</argument>
              <argument key="collection">form.type.collection</argument>
              <argument key="country">form.type.country</argument>
              <argument key="date">form.type.date</argument>
              <argument key="datetime">form.type.datetime</argument>
              <argument key="email">form.type.email</argument>
              <argument key="file">form.type.file</argument>
              <argument key="hidden">form.type.hidden</argument>
              <argument key="integer">form.type.integer</argument>
              <argument key="language">form.type.language</argument>
              <argument key="locale">form.type.locale</argument>
              <argument key="money">form.type.money</argument>
              <argument key="number">form.type.number</argument>
              <argument key="password">form.type.password</argument>
              <argument key="percent">form.type.percent</argument>
              <argument key="radio">form.type.radio</argument>
              <argument key="repeated">form.type.repeated</argument>
              <argument key="search">form.type.search</argument>
              <argument key="textarea">form.type.textarea</argument>
              <argument key="text">form.type.text</argument>
              <argument key="time">form.type.time</argument>
              <argument key="timezone">form.type.timezone</argument>
              <argument key="url">form.type.url</argument>
              <argument key="button">form.type.button</argument>
              <argument key="submit">form.type.submit</argument>
              <argument key="reset">form.type.reset</argument>
              <argument key="currency">form.type.currency</argument>
              <argument key="entity">form.type.entity</argument>
              <argument key="sonata_type_immutable_array">sonata.core.form.type.array</argument>
              <argument key="sonata_type_boolean">sonata.core.form.type.boolean</argument>
              <argument key="sonata_type_collection">sonata.core.form.type.collection</argument>
              <argument key="sonata_type_translatable_choice">sonata.core.form.type.translatable_choice</argument>
              <argument key="sonata_type_date_range">sonata.core.form.type.date_range</argument>
              <argument key="sonata_type_datetime_range">sonata.core.form.type.datetime_range</argument>
              <argument key="sonata_type_date_picker">sonata.core.form.type.date_picker</argument>
              <argument key="sonata_type_datetime_picker">sonata.core.form.type.datetime_picker</argument>
              <argument key="sonata_type_equal">sonata.core.form.type.equal</argument>
              <argument key="sonata_block_service_choice">sonata.block.form.type.block</argument>
              <argument key="sonata_type_container_template_choice">sonata.block.form.type.container_template</argument>
              <argument key="liip_imagine_image">liip_imagine.form.type.image</argument>
              <argument key="sonata_type_admin">sonata.admin.form.type.admin</argument>
              <argument key="sonata_type_model">sonata.admin.form.type.model_choice</argument>
              <argument key="sonata_type_model_list">sonata.admin.form.type.model_list</argument>
              <argument key="sonata_type_model_reference">sonata.admin.form.type.model_reference</argument>
              <argument key="sonata_type_model_hidden">sonata.admin.form.type.model_hidden</argument>
              <argument key="sonata_type_model_autocomplete">sonata.admin.form.type.model_autocomplete</argument>
              <argument key="sonata_type_native_collection">sonata.admin.form.type.collection</argument>
              <argument key="sonata_type_filter_number">sonata.admin.form.filter.type.number</argument>
              <argument key="sonata_type_filter_choice">sonata.admin.form.filter.type.choice</argument>
              <argument key="sonata_type_filter_default">sonata.admin.form.filter.type.default</argument>
              <argument key="sonata_type_filter_date">sonata.admin.form.filter.type.date</argument>
              <argument key="sonata_type_filter_date_range">sonata.admin.form.filter.type.daterange</argument>
              <argument key="sonata_type_filter_datetime">sonata.admin.form.filter.type.datetime</argument>
              <argument key="sonata_type_filter_datetime_range">sonata.admin.form.filter.type.datetime_range</argument>
              <argument key="fos_user_username">fos_user.username_form_type</argument>
              <argument key="fos_user_profile">fos_user.profile.form.type</argument>
              <argument key="fos_user_registration">fos_user.registration.form.type</argument>
              <argument key="fos_user_change_password">fos_user.change_password.form.type</argument>
              <argument key="fos_user_resetting">fos_user.resetting.form.type</argument>
            </argument>
            <argument type="collection">
              <argument key="form" type="collection">
                <argument>form.type_extension.form.http_foundation</argument>
                <argument>form.type_extension.form.validator</argument>
                <argument>form.type_extension.csrf</argument>
                <argument>sonata.admin.form.extension.field</argument>
                <argument>sonata.admin.form.extension.field.mopa</argument>
              </argument>
              <argument key="repeated" type="collection">
                <argument>form.type_extension.repeated.validator</argument>
              </argument>
              <argument key="submit" type="collection">
                <argument>form.type_extension.submit.validator</argument>
              </argument>
            </argument>
            <argument type="collection">
              <argument>form.type_guesser.validator</argument>
              <argument>form.type_guesser.doctrine</argument>
            </argument>
          </service>
        </argument>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false"/>
      </argument>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" alias="repeated"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" alias="submit"/>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="form.csrf_provider"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false">
          <argument type="service" id="security.secure_random"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod</argument>
    </service>
    <service id="templating.helper.slots" class="Symfony\Component\Templating\Helper\SlotsHelper">
      <tag name="templating.helper" alias="slots"/>
    </service>
    <service id="templating.helper.assets" class="Symfony\Component\Templating\Helper\CoreAssetsHelper" scope="request">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage" scope="request" public="false">
          <argument type="service" id="request"/>
          <argument>null</argument>
          <argument>%%s?%%s</argument>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="templating.asset.package_factory" class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory">
      <argument type="service" id="service_container"/>
    </service>
    <service id="templating.helper.request" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper">
      <tag name="templating.helper" alias="request"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.session" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper">
      <tag name="templating.helper" alias="session"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="router"/>
    </service>
    <service id="templating.helper.actions" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper">
      <tag name="templating.helper" alias="actions"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="templating.helper.code" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper">
      <tag name="templating.helper" alias="code"/>
      <argument>null</argument>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="templating.helper.translator" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper">
      <tag name="templating.helper" alias="translator"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="templating.helper.form" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper">
      <tag name="templating.helper" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\FormRenderer" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine" public="false">
              <argument type="service" id="debug.templating.engine.php"/>
              <argument type="collection">
                <argument>FrameworkBundle:Form</argument>
              </argument>
            </service>
          </argument>
          <argument type="service" id="form.csrf_provider" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="templating.helper.stopwatch" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper">
      <tag name="templating.helper" alias="stopwatch"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="templating.globals" class="Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="setApiVersion">
        <argument>3</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.user_manager"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/DependencyInjection/Compiler/../../Resources/config/validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="sonata.core.validator.inline">sonata.core.validator.inline</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.router" on-invalid="null"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="oneup_uploader.routing.loader"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>oneup_uploader.post_persist</argument>
        <argument type="collection">
          <argument>pinterestlike_user_upload_listener</argument>
          <argument>onUpload</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument>oneup_uploader.validation_listener.max_size</argument>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument>oneup_uploader.validation_listener.allowed_mimetype</argument>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument>oneup_uploader.validation_listener.disallowed_mimetype</argument>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_menu.listener.voters</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>fos_user.security.interactive_login_listener</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
            <argument>demo_secured_area</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider" public="false">
            <argument type="service" id="my_user_provider"/>
            <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>564fd2805462b</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
            <tag name="security.voter" priority="245"/>
            <argument type="service" id="security.role_hierarchy"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
            <tag name="security.voter" priority="245"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
            </argument>
            <argument type="service" id="security.authentication.trust_resolver"/>
            <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
            <tag name="security.voter" priority="250"/>
            <argument type="service" id="security.authentication.trust_resolver"/>
          </service>
        </argument>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.demo_login" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/demo/secured/login$</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.demo_secured_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/demo/secured/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.main" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/register</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="router"/>
      <call method="registerListener">
        <argument>demo_secured_area</argument>
        <argument>_demo_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.context" on-invalid="ignore"/>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.demo_login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.demo_secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="collection">
              <argument type="service" id="fos_user.user_provider.username_email"/>
            </argument>
            <argument>demo_secured_area</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>_demo</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">_demo_logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="demo_secured_area" provider="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>demo_secured_area</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">_demo_login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>demo_secured_area</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">_demo_login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">_demo_security_check</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>demo_secured_area</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>_demo_login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="hwi_oauth.resource_ownermap.main" class="HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument>facebook</argument>
        <argument>google</argument>
        <argument>yahoo</argument>
      </argument>
      <argument>%hwi_oauth.resource_ownermap.configured.main%</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="collection">
              <argument type="service" id="fos_user.user_provider.username_email"/>
            </argument>
            <argument>main</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="login_path">/login</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">/login_check</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="form.csrf_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">/login</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/login_check</argument>
              <argument key="require_previous_session">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <call method="setResourceOwnerMap">
              <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
            </call>
            <call method="setCheckPaths">
              <argument type="collection">
                <argument>/login/check-facebook</argument>
                <argument>/login/check-google</argument>
                <argument>/login/check-yahoo</argument>
                <argument>/login/check-custom</argument>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument>564fd2805462b</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>main</argument>
          <argument type="service">
            <service class="HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape" type="collection">
          <argument>Symfony\Bundle\TwigBundle\TwigDefaultEscapingStrategy</argument>
          <argument>guess</argument>
        </argument>
        <argument key="cache">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
      </argument>
      <call method="addExtension">
        <argument type="service" id="pinterestlike.twig.side_data_helper"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="templating.helper.logout_url"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\AssetsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="router.request_context" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>form_div_layout.html.twig</argument>
                      <argument>LiipImagineBundle:Form:form_div_layout.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="form.csrf_provider" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>false</argument>
            <argument type="collection"/>
            <argument type="collection">
              <argument>PinterestLikeStaticBundle</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="hwi_oauth.templating.helper.oauth"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="oneup_uploader.twig.extension.uploader"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Liip\ImagineBundle\Templating\ImagineExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="liip_imagine.cache.manager"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="templating.globals"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <argument type="service" id="monolog.handler.nested"/>
      <argument>400</argument>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/logs/prod.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="config" type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader" public="false">
            <tag name="assetic.formula_loader" alias="config"/>
          </service>
        </argument>
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource" public="false">
            <tag name="assetic.formula_resource" loader="config"/>
            <argument type="collection">
              <argument key="jquery_file_upload" type="collection">
                <argument type="collection"/>
                <argument type="collection"/>
                <argument type="collection"/>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>config</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>PinterestLikeStaticBundle</argument>
                  <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources/PinterestLikeStaticBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>PinterestLikeStaticBundle</argument>
                  <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/src/PinterestLike/StaticBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web</argument>
      <argument>true</argument>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">PinterestLike</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service">
                    <service class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
                  </argument>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Entity\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f89e9c6f6dfc996c855934662a59ae67789d510a6ee3da3011726eed7c8f145f</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f89e9c6f6dfc996c855934662a59ae67789d510a6ee3da3011726eed7c8f145f</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f89e9c6f6dfc996c855934662a59ae67789d510a6ee3da3011726eed7c8f145f</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\ORM\Mapping\DefaultEntityListenerResolver"/>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="Gedmo">Gedmo\Translatable\Entity</argument>
              <argument key="PinterestLikeCoreBundle">PinterestLike\CoreBundle\Entity</argument>
              <argument key="FOSUserBundle">FOS\UserBundle\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
                        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/src/PinterestLike/CoreBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Gedmo\Translatable\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
                        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/src/PinterestLike/CoreBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>PinterestLike\CoreBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>FOS\UserBundle\Entity</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="hwi_oauth.storage.session" class="HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="hwi_oauth.security.oauth_utils" class="HWI\Bundle\OAuthBundle\Security\OAuthUtils">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.context"/>
      <argument>true</argument>
      <call method="setResourceOwnerMap">
        <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
      </call>
    </service>
    <service id="hwi_oauth.templating.helper.oauth" class="HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper">
      <tag name="templating.helper" alias="oauth"/>
      <argument type="service" id="hwi_oauth.security.oauth_utils"/>
      <call method="setRequest">
        <argument type="service" id="request" on-invalid="null" strict="false"/>
      </call>
    </service>
    <service id="hwi_oauth.http_client" class="Buzz\Client\Curl">
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
    </service>
    <service id="hwi_oauth.resource_owner.facebook" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FacebookResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">1397106410610225</argument>
        <argument key="client_secret">dad0a6c737d4a71fb54982d19fdc2f83</argument>
        <argument key="scope">email</argument>
        <argument key="options" type="collection">
          <argument key="display">popup</argument>
        </argument>
        <argument key="paths" type="collection"/>
      </argument>
      <argument>facebook</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.resource_owner.google" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GoogleResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">469994775960-qqjm206pnsgkgk4f2o0dmoq4em5npnr1.apps.googleusercontent.com</argument>
        <argument key="client_secret">tHHUoDt9_qvgq9BPGQDdSpD0</argument>
        <argument key="scope">email profile</argument>
        <argument key="paths" type="collection"/>
        <argument key="options" type="collection"/>
      </argument>
      <argument>google</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.resource_owner.yahoo" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YahooResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">dj0yJmk9enBCa0tNQ0R1c2JNJmQ9WVdrOVltUTFjV1JQTm5FbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD05YQ--</argument>
        <argument key="client_secret">35dcfb281e922308e0a2e2be7d9d7aaf97cf646d</argument>
        <argument key="paths" type="collection"/>
        <argument key="options" type="collection"/>
      </argument>
      <argument>yahoo</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.user.provider.fosub_bridge" class="HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider">
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="collection">
        <argument key="facebook">1397108077276725</argument>
        <argument key="google">google_id</argument>
      </argument>
    </service>
    <service id="hwi_oauth.registration.form.handler.fosub_bridge" class="HWI\Bundle\OAuthBundle\Form\FOSUBRegistrationFormHandler" scope="request">
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator" on-invalid="null"/>
      <argument>30</argument>
      <call method="setFormHandler">
        <argument type="service" id="fos_user.registration.form.handler" on-invalid="null"/>
      </call>
    </service>
    <service id="oneup_uploader.chunk_manager" class="Oneup\UploaderBundle\Uploader\Chunk\ChunkManager">
      <argument type="collection">
        <argument key="maxage">604800</argument>
        <argument key="storage" type="collection">
          <argument key="type">filesystem</argument>
          <argument key="filesystem">null</argument>
          <argument key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/chunks</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
          <argument key="prefix">chunks</argument>
        </argument>
        <argument key="load_distribution">true</argument>
      </argument>
      <argument type="service" id="oneup_uploader.chunks_storage"/>
    </service>
    <service id="oneup_uploader.orphanage_manager" class="Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="maxage">604800</argument>
        <argument key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/orphanage</argument>
      </argument>
    </service>
    <service id="oneup_uploader.namer.uniqid" class="Oneup\UploaderBundle\Uploader\Naming\UniqidNamer"/>
    <service id="oneup_uploader.routing.loader" class="Oneup\UploaderBundle\Routing\RouteLoader">
      <tag name="routing.loader"/>
      <argument type="collection">
        <argument key="gallery" type="collection">
          <argument>oneup_uploader.controller.gallery</argument>
          <argument type="collection">
            <argument key="enable_progress">false</argument>
            <argument key="enable_cancelation">false</argument>
            <argument key="route_prefix"></argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="oneup_uploader.templating.uploader_helper" class="Oneup\UploaderBundle\Templating\Helper\UploaderHelper">
      <tag name="templating.helper" alias="oneup_uploader"/>
      <argument type="service" id="router"/>
      <argument type="collection">
        <argument key="gallery">2097152</argument>
      </argument>
    </service>
    <service id="oneup_uploader.validation_listener.max_size" class="Oneup\UploaderBundle\EventListener\MaxSizeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.allowed_mimetype" class="Oneup\UploaderBundle\EventListener\AllowedMimetypeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.disallowed_mimetype" class="Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.error_handler.blueimp" class="Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler" public="false"/>
    <service id="oneup_uploader.twig.extension.uploader" class="Oneup\UploaderBundle\Twig\Extension\UploaderExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="oneup_uploader.templating.uploader_helper"/>
    </service>
    <service id="oneup_uploader.chunks_storage" class="Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage">
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/uploader/chunks</argument>
    </service>
    <service id="oneup_uploader.storage.gallery" class="Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage">
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web/uploads/gallery</argument>
    </service>
    <service id="oneup_uploader.controller.gallery" class="Oneup\UploaderBundle\Controller\BlueimpController" scope="request">
      <tag name="oneup_uploader.routable" type="gallery"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.gallery"/>
      <argument type="service" id="oneup_uploader.error_handler.blueimp"/>
      <argument type="collection">
        <argument key="frontend">blueimp</argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="storage" type="collection">
          <argument key="service">null</argument>
          <argument key="type">filesystem</argument>
          <argument key="filesystem">null</argument>
          <argument key="directory">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web/uploads/gallery</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="route_prefix"></argument>
        <argument key="allowed_mimetypes" type="collection"/>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="max_size">9223372036854775807</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_progress">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="namer">oneup_uploader.namer.uniqid</argument>
      </argument>
      <argument>gallery</argument>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify"/>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify"/>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle:Block:block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
            <tag name="knp_menu.factory_extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>knp_menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/../web</argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>paste</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste"/>
      </call>
      <call method="addLoader">
        <argument>watermark</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>default</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="router"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>default</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument type="collection">
        <argument key="cache" type="collection">
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="filters" type="collection"/>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="my_thumb" type="collection">
          <argument key="quality">85</argument>
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>120</argument>
                <argument>120</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
      </argument>
    </service>
    <service id="liip_imagine.controller" class="Liip\ImagineBundle\Controller\ImagineController">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="liip_imagine.templating.helper" class="Liip\ImagineBundle\Templating\Helper\ImagineHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.paste" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste"/>
      <argument type="service" id="liip_imagine"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark"/>
      <argument type="service" id="liip_imagine"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer">
      <argument>fc3db19055fd0d7430fddf5c4818d443ea4f2518</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
    </service>
    <service id="happyr.google.api.client" class="HappyR\Google\ApiBundle\Services\GoogleClient">
      <argument type="collection">
        <argument key="application_name">PinterestLike</argument>
        <argument key="oauth2_client_id">469994775960-qqjm206pnsgkgk4f2o0dmoq4em5npnr1.apps.googleusercontent.com</argument>
        <argument key="oauth2_client_secret">tHHUoDt9_qvgq9BPGQDdSpD0</argument>
        <argument key="oauth2_redirect_uri">https://dev.PinterestLike.com/login/check-google</argument>
        <argument key="developer_key">AIzaSyB2YYnYFdcWYKS2ng4xeis_Pb52J0B1FvU</argument>
        <argument key="site_name">PinterestLike.com</argument>
      </argument>
    </service>
    <service id="happyr.google.api.analytics" class="HappyR\Google\ApiBundle\Services\AnalyticsService">
      <argument type="service" id="happyr.google.api.client"/>
    </service>
    <service id="happyr.google.api.youtube" class="HappyR\Google\ApiBundle\Services\YoutubeService">
      <argument type="service" id="happyr.google.api.client"/>
    </service>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>Sonata Admin</argument>
      <argument>bundles/sonataadmin/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonataadmin/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/App.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2-bootstrap.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection"/>
      </call>
      <call method="setAdminGroups">
        <argument type="collection"/>
      </call>
      <call method="setAdminClasses">
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter"/>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelTypeList">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\AdminBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\Security\InteractiveLoginListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.context"/>
      <argument type="service" id="hwi_oauth.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_profile_form</argument>
      <argument>fos_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>PinterestLike\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_registration_form</argument>
      <argument>PinterestLike_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>PinterestLike\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ChangePassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
    </service>
    <service id="fos_user.change_password.form.handler.default" class="FOS\UserBundle\Form\Handler\ChangePasswordFormHandler" scope="request">
      <argument type="service" id="fos_user.change_password.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.resetting.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_resetting_form</argument>
      <argument>fos_user_resetting</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ResetPassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="debug.templating.engine.php" class="Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine">
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="templating.loader"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="templating.globals"/>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setHelpers">
        <argument type="collection">
          <argument key="slots">templating.helper.slots</argument>
          <argument key="assets">templating.helper.assets</argument>
          <argument key="request">templating.helper.request</argument>
          <argument key="session">templating.helper.session</argument>
          <argument key="router">templating.helper.router</argument>
          <argument key="actions">templating.helper.actions</argument>
          <argument key="code">templating.helper.code</argument>
          <argument key="translator">templating.helper.translator</argument>
          <argument key="form">templating.helper.form</argument>
          <argument key="stopwatch">templating.helper.stopwatch</argument>
          <argument key="logout_url">templating.helper.logout_url</argument>
          <argument key="security">templating.helper.security</argument>
          <argument key="assetic">assetic.helper.static</argument>
          <argument key="oauth">hwi_oauth.templating.helper.oauth</argument>
          <argument key="oneup_uploader">oneup_uploader.templating.uploader_helper</argument>
          <argument key="sonata_block">sonata.block.templating.helper</argument>
          <argument key="imagine">liip_imagine.templating.helper</argument>
        </argument>
      </call>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/config/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appProdUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appProdUrlMatcher</argument>
        <argument key="strict_requirements">null</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/cache/prod/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="PinterestLike\UserBundle\Entity\User" type="collection">
          <argument key="class">%security.encoder.digest.class%</argument>
          <argument key="arguments" type="collection">
            <argument>sha512</argument>
            <argument>true</argument>
            <argument>5000</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/hwi/oauth-bundle/HWI/Bundle/OAuthBundle/Resources/views</argument>
        <argument>HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/src/PinterestLike/CoreBundle/Resources/views</argument>
        <argument>PinterestLikeCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/src/PinterestLike/StaticBundle/Resources/views</argument>
        <argument>PinterestLikeStatic</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/sonata-project/core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/sonata-project/block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/sonata-project/admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources/FOSUserBundle/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/Users/chiechelski/Documents/Web/symfony-pinterest-like-project/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
              </argument>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
    </service>
    <service id="hwi_oauth.user_checker" class="Symfony\Component\Security\Core\User\UserChecker"/>
    <service id="liip_imagine" class="Imagine\Gd\Imagine">
      <call method="setMetadataReader">
        <argument type="service">
          <service class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler"/>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">FOSUserBundle:Resetting:email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator">
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="fos_user.user_manager" class="FOS\UserBundle\Doctrine\UserManager">
      <argument type="service" id="security.encoder_factory"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service">
        <service class="Doctrine\ORM\EntityManager" factory-method="getManager" factory-service="doctrine" public="false">
          <argument>null</argument>
        </service>
      </argument>
      <argument>PinterestLike\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.profile.form.handler" class="FOS\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="fos_user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.registration.form.handler" class="FOS\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="fos_user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="fos_user.resetting.form.handler" class="FOS\UserBundle\Form\Handler\ResettingFormHandler" scope="request">
      <argument type="service" id="fos_user.resetting.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="knp_menu.factory"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="hwi_oauth.user.provider.entity.main" alias="my_user_provider"/>
    <service id="debug.templating.engine.twig" alias="templating"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="hwi_oauth.account.connector" alias="my_user_provider"/>
    <service id="hwi_oauth.registration.form.handler" alias="hwi_oauth.registration.form.handler.fosub_bridge"/>
    <service id="hwi_oauth.registration.form" alias="fos_user.registration.form"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="fos_user.change_password.form.handler" alias="fos_user.change_password.form.handler.default"/>
  </services>
</container>
